name:liyan_Home
email:9746.*.com

git init	创建仓库，初始化
git status		#查看当前仓库状态，例如增加删除修改了，未提交到库

git diff <file> 查看未提交的文件修改了哪些内容
git diff <file> 比较的是工作区文件与暂存区文件的区别（上次git add 的内容）
git diff --cached 比较的是暂存区的文件与仓库分支里（上次git commit 后的内容）的区
git diff HEAD --<file>命令可以查看工作区和版本库里面最新版本的区别

重点：
git reset --hard HEAD^ #版本回溯。（HEAD^)这部分表示回到上个版本，
如果用（HEAD^^)则是回到上上个版本。如果写成（123a)之类则是回到指定版本，
这里的123a指代的版本ID，通常这个ID很长，但是不需要写全只需要前面部分能匹配到即可。

特别需要注意的是，从当前最新版本回到某一个过去版本，那个过去版本到当前最新版本这中间的所有
版本都会丢掉（也包括最新，例如从g版回到c版，则d/e/f/g都会丢掉。用LOG也找不到ID）。

如果关闭了窗口，没有ID就找不回来了。当发生这种事，可以用：
git reflog 命令，这个命令是用来记录每一次操作的。


git checkout -- <file>撤销提交到暂存区的文件
一种是<file>自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是<file>已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态
就是让这个文件回到最近一次git commit或git add时的状态


git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

删除文件：
先删除本地文件，然后用
git rm 删除本地仓库的文件。
也可以用git add <file>  / git commit 等方式来提交，达到删除的目的


======================平时操作的正常流程==============================
正确步骤：
1. git init //初始化仓库

2. git add .(文件name) //添加文件到本地仓库

3. git commit -m "first commit" //添加文件描述信息

4. git remote add origin + 远程仓库地址 //链接远程仓库，创建主分支

5. git pull origin master // 把本地仓库的变化连接到远程仓库主分支
		    // 拉取指定仓库的master分支信息 origin是本地给远程仓库命的名。也许不跟Git上的仓库名一致
6. git push -u origin master //把本地仓库的文件推送到远程仓库